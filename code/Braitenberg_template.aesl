<!DOCTYPE aesl-source>
<network>


<!--list of global events-->


<!--list of constants-->
<constant value="500" name="MAX_SPEED"/>


<!--show keywords state-->
<keywords flag="true"/>


<!--node thymio-II-->
<node nodeId="1" name="thymio-II"># Template for Thymio Braitenberg Vehicle implementation.
# For Theory &amp; Practice of Artificial Intelligence
# by Matthew Lewis, 2020

# -------------------------------------------
# Declare and optionally initialise variables
# -------------------------------------------

# Variables to hold motor values
var mot_l
var mot_r

# Variables for Braitenberg avoid routine
var br_weights_l[5] = [-1, -1, 1, 1, 1] # Weights connecting 5 proximity sensors to L motor
var br_weights_r[5] = [1, 1, 1, -1, -1] # Weights connecting 5 proximity sensors to R motor
var br_shift = 4 # number bits to shift in dot product 4 bits means "divide by 16"
var default_speed = 0 # default speed with 0 sensor inputs


# -------------------------------------
# Initialisation code called on startup
# -------------------------------------

# No initisation code needed!


# ------------------------------
# Subroutines and event handlers
# ------------------------------


# Subroutine to set wheel speeds from proximity sensors
sub braitenberg
	# Use the vector dot product library function to calculate left motor value
	call math.dot(mot_l, br_weights_l, prox.horizontal[0:4], br_shift)
	mot_l += default_speed
	
	call math.dot(mot_r, br_weights_r, prox.horizontal[0:4], br_shift)
	mot_r += default_speed
	# Use the vector dot product library function to calculate left motor value
	# ADD CODE TO SET RIGHT MOTOR SPEED HERE
	
	# If motor values are &lt; -MAX_SPEED or > +MAX_SPEED fix them
	call math.clamp(mot_l, mot_l, -MAX_SPEED, MAX_SPEED)
	call math.clamp(mot_r, mot_r, -MAX_SPEED, MAX_SPEED)

	# Write calculated motor values to Thymio variables to run motors
	motor.left.target = -mot_l # ADD CODE WRITE LEFT/RIGHT TARGET VALUES HERE
	motor.right.target = mot_r


# Handle proximity events. Called when sensor values update (10Hz)
onevent prox
	callsub braitenberg
</node>


</network>
